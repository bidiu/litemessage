{"version":3,"sources":["/Users/sunhe/Documents/projects/litemessage/webpack/universalModuleDefinition","/Users/sunhe/Documents/projects/litemessage/webpack/bootstrap","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/regenerator\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/asyncToGenerator\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/object/get-prototype-of\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/classCallCheck\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/createClass\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/get-iterator\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/defineProperty\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/toConsumableArray\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/possibleConstructorReturn\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/inherits\"","/Users/sunhe/Documents/projects/litemessage/node_modules/webpack/buildin/harmony-module.js","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/json/stringify\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/objectWithoutProperties\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/object/freeze\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/promise\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/extends\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/object/values\"","/Users/sunhe/Documents/projects/litemessage/src/utils/network.js","/Users/sunhe/Documents/projects/litemessage/external \"wolfy87-eventemitter\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/get\"","/Users/sunhe/Documents/projects/litemessage/node_modules/process/browser.js","/Users/sunhe/Documents/projects/litemessage/src/clients/node.js","/Users/sunhe/Documents/projects/litemessage/src/utils/time.js","/Users/sunhe/Documents/projects/litemessage/src/liteprotocol/messages.js","/Users/sunhe/Documents/projects/litemessage/src/utils/litecrypto.js","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/object/keys\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/helpers/slicedToArray\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/map\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/number/max-safe-integer\"","/Users/sunhe/Documents/projects/litemessage/external \"babel-runtime/core-js/array/from\"","/Users/sunhe/Documents/projects/litemessage/index.js","/Users/sunhe/Documents/projects/litemessage/external \"uuid/v1\"","/Users/sunhe/Documents/projects/litemessage/external \"levelup\"","/Users/sunhe/Documents/projects/litemessage/src/litenode.js","/Users/sunhe/Documents/projects/litemessage/src/wsc.js","/Users/sunhe/Documents/projects/litemessage/external \"simple-websocket\"","/Users/sunhe/Documents/projects/litemessage/external \"level-js\"","/Users/sunhe/Documents/projects/litemessage/src/clients/thinnode.js","/Users/sunhe/Documents/projects/litemessage/src/liteprotocol/thinprotocol.js","/Users/sunhe/Documents/projects/litemessage/src/p2pprotocol/p2protocol.js","/Users/sunhe/Documents/projects/litemessage/src/p2pprotocol/store.js","/Users/sunhe/Documents/projects/litemessage/src/p2pprotocol/messages.js","/Users/sunhe/Documents/projects/litemessage/src/utils/common.js","/Users/sunhe/Documents/projects/litemessage/src/liteprotocol/store.js","/Users/sunhe/Documents/projects/litemessage/src/liteprotocol/handshake.js","/Users/sunhe/Documents/projects/litemessage/src/peer.js","/Users/sunhe/Documents/projects/litemessage/src/utils/blockchain.js","/Users/sunhe/Documents/projects/litemessage/node_modules/node-libs-browser/node_modules/buffer/index.js","/Users/sunhe/Documents/projects/litemessage/node_modules/webpack/buildin/global.js","/Users/sunhe/Documents/projects/litemessage/external \"base64-js\"","/Users/sunhe/Documents/projects/litemessage/external \"ieee754\"","/Users/sunhe/Documents/projects/litemessage/external \"isarray\"","/Users/sunhe/Documents/projects/litemessage/external \"events\"","/Users/sunhe/Documents/projects/litemessage/external \"js-sha256\"","/Users/sunhe/Documents/projects/litemessage/external \"buffer/\""],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","originalModule","webpackPolyfill","children","extractSocketAddr","url","result","exec","host","port","parseInt","Error","getRemoteAddress","socket","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0___default","constructor","_socket","remoteAddress","replace","getRemotePort","remotePort","getSocketAddress","getLocalAddress","undefined","localAddress","getLocalPort","localPort","getLocalSocketAddr","getSocketInfo","localSocketAddr","remoteSocketAddr","getReadyState","_ws","readyState","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","uuidv1","levelup","LiteNode","leveldb","Node","nodeType","dbPath","protocolClass","initPeerUrls","debug","noserver","_this","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","TypeError","uuid","db","litenode","protocol","forEach","createConnection","nodeTypes","peers","babel_runtime_core_js_object_values__WEBPACK_IMPORTED_MODULE_0___default","filter","peer","includes","close","getCurTimestamp","unit","Date","getTime","Math","round","messageTypes","babel_runtime_core_js_object_freeze__WEBPACK_IMPORTED_MODULE_1___default","info","infoAck","getBlocks","inv","getData","data","getDataPartial","dataPartial","partialNotFound","getPendingMsgs","getHeaders","headers","locateLitemsgs","litemsgLocators","_ref","daemonPort","messageType","validate","_ref2","_ref3","blockLocators","_ref4","_ref5","_ref5$blocks","blocks","_ref5$litemsgs","litemsgs","_ref6","_ref7","_ref7$blocks","_ref7$litemsgs","_ref8","_ref9","_ref9$blocks","_ref9$litemsgs","_ref10","_ref11","merkleDigest","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","lookup","_ref24","messageValidators","_Object$freeze2","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","sha256","Buffer","maskTable","babel_runtime_core_js_object_freeze__WEBPACK_IMPORTED_MODULE_2___default","calcMerkleRoot","leaves","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","innerNodes","verifyMerkleRoot","merkleRoot","leadingZeroBits","buffer","from","bits","byteAt","bitAt","verifyLitemsg","litemessage","ver","time","litemsg","sig","pubKey","hash","verifyBlock","block","prevBlock","height","nonce","map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","babel_runtime_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_0___default","next","done","err","return","verifyHeader","verifySubchain","subchain","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","verifyHeaderChain","headerChain","prevHeader","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","ThinNode","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","WSServer","WSClient","_ref$port","_ref$debug","_ref$noserver","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4___default","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default","__proto__","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_3___default","socketConnectHandler","socketMessageHandler","socketCloseHandler","debugPort","socketsToPeers","messageLogs","wss","console","log","remoteUuid","Proxy","propName","options","callback","msg","JSON","parse","send","_this2","exUuids","babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_1___default","error","jsonObj","broadcast","babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","incoming","_this3","socketAddress","code","reason","msgObj","_this4","warn","createSocketProxy","message","network","getInfo","sockets","socketInfo","remoteDaemonPort","URL","EventEmitter","WebSocket","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_7___default","destroy","terminate","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","connectionHandler","servers","match","prevSocket","socketAlive","handshakeTimeout","babel_runtime_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_core_js_object_values__WEBPACK_IMPORTED_MODULE_1___default","socketAbnormal","alive","ping","OPEN","clearInterval","timer","ThinLiteProtocol","NODE_TYPE","_ref$protocolClass","_ref$initPeerUrls","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default","P2PProtocol","LiteProtocolStore","HandshakeManager","Blockchain","AUTO_CONN_NODE_TYPES","node","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6___default","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_5___default","invHandler","headersHandler","peerConnectHandler","litestore","blockchain","init","exit","handshake","litemsgId","hasLitemsg","payload","blocksToGet","blockId","hasBlock","sendJson","_context2","t1","sort","a","b","headBlockId","getHeadBlockIdSync","getCurHeightSync","append","getLocatorsSync","prevBlockId","getBlock","extendedBlocks","onMainBranchSync","unshift","appendAt","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","_context3","t2","babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_8___default","P2PProtocolStore","fetchPeers","returnPeers","pickItems","_ref$nodeTypes","_ref$minPeerNum","minPeerNum","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_5___default","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_4___default","persistPeerUrls","fetchPeersHandler","returnPeersHandler","intervalTimers","store","connectToLastConnectedPeers","setInterval","broadcastJson","initUrls","addresses","hostname","address","toString","readCurPeerUrls","_context","peerUrls","writeCurPeerUrls","t0","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","limit","connectedPeerUrls","splice","indexOf","resMsg","genKey","babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default","put","buf","notFound","_ref$limit","_ref3$peerUrls","randomInt","max","floor","random","isValidJson","json","num","copiedArray","picked","min","sliceItems","slices","sliced","slice","parseChunk","hashes","del","readLitemsg","_context4","_context5","batchOps","ops","type","babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_2___default","batch","headBlock","Peer","infoType","infoAckType","MSG_TYPES","p2pProtocol","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_10___default","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8___default","babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_6___default","pendingSockets","babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_5___default","now","babel_runtime_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_3___default","babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default","timestamp","delete","pendingSocket","PendingSocket","state","proxiedSocket","_messageHandler","_JSON$parse","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","sendInfo","sendInfoAck","onEstablished","stack","set","addPendingSocket","addNewPeer","remoteAddr","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_8___default","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10___default","_ready","getCurHeight","numOfChunks","numOfBlocks","babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_5___default","all","babel_runtime_core_js_array_from__WEBPACK_IMPORTED_MODULE_4___default","keys","_getChunk","chunks","getHeadBlock","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default","serialNum","chunk","chunkSize","join","appendBlock","at","blockIds","offBlockIds","_blockchain","babel_runtime_core_js_number_max_safe_integer__WEBPACK_IMPORTED_MODULE_1___default","chunkAt","appendBlocksAt","id","offBlocks","offLitemsgs","babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default","babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","mark","_callee4","wrap","prev","sent","abrupt","removeLitemsg","stop","_x4","readHeadBlock","curHeight","locators","pow","getBlockIdAtSync","reverse","readBlock","onMainBranch","global","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","obj","isBuffer","checked","copy","val","isnan","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","g","Function","eval"],"mappings":"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","file":"litemessage.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"litemessage\"] = factory();\n\telse\n\t\troot[\"litemessage\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/core-js/object/get-prototype-of\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/core-js/get-iterator\");","module.exports = require(\"babel-runtime/helpers/defineProperty\");","module.exports = require(\"babel-runtime/helpers/toConsumableArray\");","module.exports = require(\"babel-runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"babel-runtime/helpers/inherits\");","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/helpers/objectWithoutProperties\");","module.exports = require(\"babel-runtime/core-js/object/freeze\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"babel-runtime/helpers/extends\");","module.exports = require(\"babel-runtime/core-js/object/values\");","const extractSocketAddr = (url) => {\n  let result = /^ws:\\/\\/(.+):(\\d+)$/.exec(url);\n  if (result) {\n    return {\n      host: result[1],\n      port: parseInt(result[2])\n    };\n  }\n  throw new Error('Unable to extract socket address from url.');\n};\n\nconst getRemoteAddress = (socket) => {\n  if (Object.getPrototypeOf(socket).constructor.name === 'Socket') {\n    return extractSocketAddr(socket.url).host;\n  }\n  return socket._socket.remoteAddress.replace(/^.*:/, '');\n};\n\n/**\n * Note that a string will be returned.\n */\nconst getRemotePort = (socket) => {\n  if (Object.getPrototypeOf(socket).constructor.name === 'Socket') {\n    return extractSocketAddr(socket.url).port + '';\n  }\n  return socket._socket.remotePort + '';\n};\n\n/**\n * Of remote end.\n * \n * @param {*} socket \n */\nconst getSocketAddress = (socket) => {\n  return `${getRemoteAddress(socket)}:${getRemotePort(socket)}`;\n};\n\nconst getLocalAddress = (socket) => \n  Object.getPrototypeOf(socket).constructor.name === 'Socket' ?\n    undefined :\n    socket._socket.localAddress.replace(/^.*:/, '');\n\nconst getLocalPort = (socket) => \n  Object.getPrototypeOf(socket).constructor.name === 'Socket' ?\n    undefined :\n    socket._socket.localPort;\n\nconst getLocalSocketAddr = (socket) =>\n  `${getLocalAddress(socket)}:${getLocalPort(socket)}`;\n\nconst getSocketInfo = (socket) => ({\n  localSocketAddr: getLocalSocketAddr(socket),\n  remoteSocketAddr: getSocketAddress(socket)\n});\n\nconst getReadyState = (socket) => \n  Object.getPrototypeOf(socket).constructor.name === 'Socket' ?\n    socket._ws.readyState :\n    socket.readyState;\n\nexports.getRemoteAddress = getRemoteAddress;\nexports.getRemotePort = getRemotePort;\nexports.getSocketAddress = getSocketAddress;\nexports.getLocalAddress = getLocalAddress;\nexports.getLocalPort = getLocalPort;\nexports.getLocalSocketAddr = getLocalSocketAddr;\nexports.getSocketInfo = getSocketInfo;\nexports.getReadyState = getReadyState;\n","module.exports = require(\"wolfy87-eventemitter\");","module.exports = require(\"babel-runtime/helpers/get\");","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const uuidv1 = require('uuid/v1');\nconst levelup = require('levelup');\nconst LiteNode = require('../litenode');\n\nif (BUILD_TARGET === 'node') {\n  // run in node\n\n  var fs = require('fs');\n  var leveldb = require('leveldown');\n\n} else {\n  // run in browser\n\n  var leveldb = require('level-js');\n}\n\n/**\n * A UUID identifying this node will be automatically generated.\n * \n * TODO provide implementation in browser env examining existing db\n */\nclass Node {\n  constructor(nodeType, dbPath, port, protocolClass, initPeerUrls, debug, noserver) {\n    if (new.target === Node) {\n      throw new TypeError(\"Cannot construct Node instances directly.\");\n    }\n\n    // some necessary info\n    this.uuid = uuidv1();\n    this.nodeType = nodeType;\n    this.initPeerUrls = initPeerUrls;\n\n    if (BUILD_TARGET === 'node') {\n      if (fs.existsSync(dbPath) && fs.statSync(dbPath).isDirectory()) {\n        console.log('Using existing LevelDB directory.');\n      } else {\n        console.log('A new LevelDB directory will be created.');\n      }\n    }\n\n    // initialize the database (Level DB)\n    this.db = levelup(leveldb(dbPath));\n\n    // create underlying litenode\n    this.litenode = new LiteNode(this.uuid, { port, debug, noserver });\n    // instantiate the protocol manager\n    this.protocol = new protocolClass(this);\n\n    this.protocol.on('ready', () => {\n      // connect to initial peers\n      this.initPeerUrls.forEach(url => this.litenode.createConnection(url));\n    });\n  }\n\n  /**\n   * @param {string|Array<string>} nodeTypes pass `*` for matching all types\n   */\n  peers(nodeTypes = '*') {\n    if (typeof nodeTypes === 'string' && nodeTypes !== '*') {\n      nodeTypes = [nodeTypes];\n    }\n\n    let peers = this.litenode ? Object.values(this.litenode.peers) : [];\n    return peers.filter(peer => nodeTypes === '*' || nodeTypes.includes(peer.nodeType));\n  }\n\n  /**\n   * Do the cleanup.\n   */\n  close() {\n    this.protocol.close();\n    this.litenode.close();\n    this.db.close();\n  }\n}\n\nmodule.exports = Node;\n","/**\n * in ms\n */\nconst getCurTimestamp = (unit = 'ms') => {\n  if (unit === 'ms') {\n    return new Date().getTime();\n  } else if (unit === 's') {\n    return Math.round(new Date().getTime() / 1000);\n  } else {\n    throw new Error('Invalid unit: ' + unit + '.');\n  }\n}\n\nexports.getCurTimestamp = getCurTimestamp;\n","const messageTypes = Object.freeze({\n  info: 'lite/info',\n  infoAck: 'lite/info_ack',\n\n  getBlocks: 'lite/get_blocks',\n  inv: 'lite/inv',\n  getData: 'lite/get_data',\n  data: 'lite/data',\n  getDataPartial: 'lite/get_data_partial',\n  dataPartial: 'lite/data_partial',\n  partialNotFound: 'lite/partial_not_found',\n\n  getPendingMsgs: 'lite/get_pending_msgs',\n\n  getHeaders: 'lite/get_headers',\n  headers: 'lite/headers',\n  locateLitemsgs: 'lite/locate_litemsgs',\n  litemsgLocators: 'lite/litemsg_locators',\n});\n\nconst info = ({ uuid, nodeType, daemonPort }) => ({\n  messageType: messageTypes.info,\n  uuid,\n  nodeType,\n  daemonPort\n});\n\ninfo.validate = ({ uuid, nodeType, daemonPort }) => {\n  if (typeof uuid !== 'string') {\n    throw new Error('lite/: Invalid uuid.');\n  }\n  if (nodeType !== 'full' && nodeType !== 'thin') {\n    throw new Error('lite/: Invalid node type.');\n  }\n  if (daemonPort !== undefined && (typeof daemonPort !== 'number' \n      || daemonPort <= 1024 || daemonPort > 65535)) {\n    throw new Error('lite/: Invalid daemon port.');\n  }\n  if (nodeType === 'full' && !daemonPort) {\n    throw new Error('lite/: Invalid daemon port.');\n  }\n};\n\nconst infoAck = () => ({\n  messageType: messageTypes.infoAck\n});\n\ninfoAck.validate = () => {\n  // nothing here\n}\n\nconst getBlocks = ({ blockLocators }) => ({\n  messageType: messageTypes.getBlocks,\n  blockLocators\n});\n\ngetBlocks.validate = ({ blockLocators }) => {\n  if (!(blockLocators instanceof Array)) {\n    throw new Error('lite/: Invalid block locators.');\n  }\n};\n\n/**\n * both params are list of ids\n */\nconst inv = ({ blocks = [], litemsgs = [] }) => ({\n  messageType: messageTypes.inv,\n  blocks,\n  litemsgs\n});\n\ninv.validate = ({ blocks, litemsgs }) => {\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n  if (!(litemsgs instanceof Array)) {\n    throw new Error('lite/: Invalid lite messages.');\n  }\n};\n\n/**\n * both params are list of ids\n */\nconst getData = ({ blocks = [], litemsgs = [] }) => ({\n  messageType: messageTypes.getData,\n  blocks,\n  litemsgs\n});\n\ngetData.validate = ({ blocks, litemsgs }) => {\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n  if (!(litemsgs instanceof Array)) {\n    throw new Error('lite/: Invalid lite messages.');\n  }\n};\n\nconst data = ({ blocks = [], litemsgs = [] }) => ({\n  messageType: messageTypes.data,\n  blocks,\n  litemsgs\n});\n\ndata.validate = ({ blocks, litemsgs }) => {\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n  if (!(litemsgs instanceof Array)) {\n    throw new Error('lite/: Invalid lite messages.');\n  }\n};\n\nconst getDataPartial = ({ merkleDigest, blocks }) => ({\n  messageType: messageTypes.getDataPartial,\n  merkleDigest,\n  blocks\n});\n\ngetDataPartial.validate = ({ merkleDigest, blocks }) => {\n  if (typeof merkleDigest !== 'string') {\n    throw new Error('lite/: Invalid merkle digest.');\n  }\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n};\n\nconst dataPartial = ({ merkleDigest, blocks }) => ({\n  messageType: messageTypes.dataPartial,\n  merkleDigest,\n  blocks\n});\n\ndataPartial.validate = ({ merkleDigest, blocks }) => {\n  if (typeof merkleDigest !== 'string') {\n    throw new Error('lite/: Invalid merkle digest.');\n  }\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n};\n\nconst partialNotFound = ({ merkleDigest, blocks }) => ({\n  messageType: messageTypes.partialNotFound,\n  merkleDigest,\n  blocks\n});\n\npartialNotFound.validate = ({ merkleDigest, blocks }) => {\n  if (typeof merkleDigest !== 'string') {\n    throw new Error('lite/: Invalid merkle digest.');\n  }\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n};\n\nconst getPendingMsgs = () => ({\n  messageType: messageTypes.getPendingMsgs\n});\n\ngetPendingMsgs.validate = () => {\n  // nothing\n};\n\nconst getHeaders = ({ blocks }) => ({\n  messageType: messageTypes.getHeaders,\n  blocks\n});\n\ngetHeaders.validate = ({ blocks }) => {\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid blocks.');\n  }\n};\n\nconst headers = ({ blocks }) => ({\n  messageType: messageTypes.headers,\n  blocks\n});\n\nheaders.validate = ({ blocks }) => {\n  if (!(blocks instanceof Array)) {\n    throw new Error('lite/: Invalid block headers.');\n  }\n}\n\n/**\n * @param {*} options\n *      `litemsgs` - ids\n */\nconst locateLitemsgs = ({ litemsgs }) => ({\n  messageType: messageTypes.locateLitemsgs,\n  litemsgs\n});\n\nlocateLitemsgs.validate = ({ litemsgs }) => {\n  if (!(litemsgs instanceof Array)) {\n    throw new Error('lite/: Invalid lite message ids.');\n  }\n};\n\n/**\n * `litemsgs` is an array of litemsg ids. \n * `blocks` is an array of blocks. \n * `lookup` stores the relation between `litemsgs` and `blocks`.\n * \n * The number of elements in `lookup` MUST be the same as `litemsgs`.\n * Each element in `lookup` is a block id. For instance, id of the \n * block which first litemessage is located is the first element of\n * `lookup.`\n * \n * In case a litemessage is not in any block, the corresponding\n * element in `lookup` MUST be undefined (or any falsy value).\n */\nconst litemsgLocators = ({ litemsgs, blocks, lookup }) => ({\n  messageType: messageTypes.litemsgLocators,\n  litemsgs,\n  blocks,\n  lookup\n});\n\nlitemsgLocators.validate = ({ litemsgs, blocks, lookup }) => {\n  // TODO verify the lookup array is correct\n};\n\n// validators\nconst messageValidators = Object.freeze({\n  [messageTypes.info]: info.validate,\n  [messageTypes.infoAck]: infoAck.validate,\n  [messageTypes.getBlocks]: getBlocks.validate,\n  [messageTypes.inv]: inv.validate,\n  [messageTypes.getData]: getData.validate,\n  [messageTypes.data]: data.validate,\n  [messageTypes.getDataPartial]: getDataPartial.validate,\n  [messageTypes.dataPartial]: dataPartial.validate,\n  [messageTypes.partialNotFound]: partialNotFound.validate,\n  [messageTypes.getPendingMsgs]: getPendingMsgs.validate,\n  [messageTypes.getHeaders]: getHeaders.validate,\n  [messageTypes.headers]: headers.validate,\n  [messageTypes.locateLitemsgs]: locateLitemsgs.validate,\n  [messageTypes.litemsgLocators]: litemsgLocators.validate,\n});\n\nexports.messageTypes = messageTypes;\nexports.messageValidators = messageValidators;\nexports.info = info;\nexports.infoAck = infoAck;\nexports.getBlocks = getBlocks;\nexports.inv = inv;\nexports.getData = getData;\nexports.data = data;\nexports.getDataPartial = getDataPartial;\nexports.dataPartial = dataPartial;\nexports.partialNotFound = partialNotFound;\nexports.getPendingMsgs = getPendingMsgs;\nexports.getHeaders = getHeaders;\nexports.headers = headers;\nexports.locateLitemsgs = locateLitemsgs;\nexports.litemsgLocators = litemsgLocators;\n","if (BUILD_TARGET === 'node') {\n  // node\n\n  var path = require('path');\n  var crypto = require('crypto');\n  var { fork } = require('child_process');\n  var Promise = require('bluebird');\n  var Buffer = require('buffer').Buffer;\n\n  Promise.config({\n    // enable warnings\n    warnings: true,\n    // enable long stack traces\n    longStackTraces: true,\n    //enable cancellation\n    cancellation: true\n  });\n\n} else {\n  // browser\n\n  var sha256 = require('js-sha256');\n  var Buffer = require('buffer/').Buffer;\n}\n\n// ********************* requiring ends *********************\n\nconst maskTable = Object.freeze([\n  0x80, \n  0x40, \n  0x20,\n  0x10,\n  0x08,\n  0x04,\n  0x02,\n  0x01\n]);\n\nif (BUILD_TARGET === 'node') {\n  // node\n\n  var sha256 = (content, digest = 'hex') => \n    crypto.createHash('sha256')\n      .update(content)\n      .digest(digest);\n\n  var mine = (content, difficulty) => \n    new Promise((resolve, reject, onCancel) => {\n      if (typeof difficulty !== 'number') { reject(new Error('Invalid difficulty.')); }\n      let cp = fork(path.join(__dirname, 'mine.js'), [content, difficulty]);\n  \n      let timer = setTimeout(() => {\n        cp.removeAllListeners();\n        cp.kill('SIGTERM');\n        reject(new Error('Mining timeouts.'));\n  \n        // disable timeout in production\n      }, 600000);\n  \n      cp.on('message', (nonce) => {\n        clearTimeout(timer);\n        resolve(nonce);\n      });\n      \n      onCancel(() => {\n        clearTimeout(timer);\n        cp.removeAllListeners();\n        cp.kill('SIGTERM');\n      });\n    });\n\n} else {\n  // browser\n\n  // nothing here\n}\n\n/**\n * @param {Array<string>} leaves  list of litemessage ids\n */\nconst calcMerkleRoot = (leaves) => {\n  if (leaves.length === 0) {\n    throw new Error('Cannot calcuate merkle root from 0 leaf.');\n  }\n  if (leaves.length % 2 === 1) {\n    leaves = [...leaves, leaves[leaves.length - 1]]\n  }\n  let innerNodes = [];\n  for (let i = 0; i < leaves.length; i += 2) {\n    innerNodes.push(sha256(`${leaves[i]}${leaves[i + 1]}`));\n  }\n  if (innerNodes.length === 1) {\n    return innerNodes[0];\n  }\n  return calcMerkleRoot(innerNodes);\n}\n\n/**\n * If verification passes, `true` will be returned.\n */\nconst verifyMerkleRoot = (merkleRoot, leaves) => {\n  return merkleRoot === calcMerkleRoot(leaves);\n}\n\n/**\n * @param {Buffer|string} buffer binary buffer or string in hex encoding\n */\nconst leadingZeroBits = (buffer) => {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer, 'hex');\n  }\n  let bits = 0;\n  let byteAt = 0;\n\n  for (; buffer[byteAt] === 0; byteAt++) {\n    bits += 8;\n  }\n  for (let bitAt = 0; bitAt < 8; bitAt++) {\n    if (buffer[byteAt] & maskTable[bitAt]) {\n      break;\n    }\n    bits += 1;\n  }\n\n  return bits;\n}\n\n/**\n * TODO validate timestamp, sig, pubKey\n * For timestamp, need to consider how long it takes to\n * populate the network.\n */\nconst verifyLitemsg = (litemessage) => {\n  if (!litemessage) { return false; }\n\n  let { ver, time, litemsg, sig, pubKey, hash } = litemessage;\n\n  if (typeof ver !== 'number') {\n    return false;\n  }\n  if (typeof time !== 'number') {\n    return false;\n  }\n  if (typeof litemsg !== 'string') {\n    return false;\n  }\n  if (hash !== sha256(`${ver}${time}${litemsg}${sig}${pubKey}`)) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * TODO validate timestamp, bits (its value)\n * \n * Note that if you don't pass `prevBlock`, this func won't verify `height` (though\n * it still must be a positive number) and `prevBlock` (though it still must be \n * `undefined` when `height` is 0).\n * \n * When verifying genesis block (the first block), you shouldn't pass `prevBlock`\n * parameter.\n * \n * @param {*} block     the block to verify\n * @param {*} prevBlock (optional) previous block (not id), which the verified\n *                      block should be after immediately\n */\nconst verifyBlock = (block, prevBlock) => {\n  if (!block) { return false; }\n\n  let { ver, time, height, merkleRoot, bits, nonce, litemsgs } = block;\n\n  if (typeof ver !== 'number') {\n    return false;\n  }\n  if (typeof time !== 'number') {\n    return false;\n  }\n  if (typeof height !== 'number' || height < 0 || \n    (height === 0 && typeof block.prevBlock !== 'undefined') ||\n    (height !== 0 && typeof block.prevBlock === 'undefined')) {\n\n    return false;\n  }\n  if (!(litemsgs instanceof Array) || !litemsgs.length) {\n    return false;\n  }\n  if (typeof merkleRoot !== 'string' || !verifyMerkleRoot(merkleRoot, litemsgs.map(m => m.hash))) {\n    return false;\n  }\n  \n  /* bits, nonce, hash */\n  if (typeof bits !== 'number'|| typeof nonce !== 'number'\n    || nonce < 0 || typeof block.hash !== 'string') {\n    \n    return false;\n  }\n  let hash = sha256(`${ver}${time}${height}${block.prevBlock}${merkleRoot}${bits}${nonce}`);\n  if (hash !== block.hash || leadingZeroBits(hash) < bits) {\n    return false;\n  }\n\n  /* litemsgs */\n  for (let litemsg of litemsgs) {\n    if (!verifyLitemsg(litemsg)) { return false; }\n  }\n\n  /* height, prevBlock */\n  if (typeof prevBlock !== 'undefined') {\n    if (typeof block.prevBlock !== 'string' || prevBlock.hash !== block.prevBlock) {\n      return false;\n    }\n\n    if (prevBlock.height + 1 !== height) { return false; }\n  }\n  return true;\n};\n\n/**\n * Similar to `verifyBlock`. However, `litemsgs` MUST be `undefined`.\n * \n * TODO validate timestamp, bits (its value)\n */\nconst verifyHeader = (block, prevBlock) => {\n  if (!block) { return false; }\n\n  let { ver, time, height, merkleRoot, bits, nonce, litemsgs } = block;\n\n  if (typeof ver !== 'number') {\n    return false;\n  }\n  if (typeof time !== 'number') {\n    return false;\n  }\n  if (typeof height !== 'number' || height < 0 || \n    (height === 0 && typeof block.prevBlock !== 'undefined') ||\n    (height !== 0 && typeof block.prevBlock === 'undefined')) {\n\n    return false;\n  }\n  if (litemsgs !== undefined) {\n    return false;\n  }\n  if (typeof merkleRoot !== 'string') {\n    return false;\n  }\n  \n  /* bits, nonce, hash */\n  if (typeof bits !== 'number'|| typeof nonce !== 'number'\n    || nonce < 0 || typeof block.hash !== 'string') {\n    \n    return false;\n  }\n  let hash = sha256(`${ver}${time}${height}${block.prevBlock}${merkleRoot}${bits}${nonce}`);\n  if (hash !== block.hash || leadingZeroBits(hash) < bits) {\n    return false;\n  }\n\n  /* height, prevBlock */\n  if (typeof prevBlock !== 'undefined') {\n    if (typeof block.prevBlock !== 'string' || prevBlock.hash !== block.prevBlock) {\n      return false;\n    }\n\n    if (prevBlock.height + 1 !== height) { return false; }\n  }\n  return true;\n};\n\n/**\n * Note that `subchain` start from elder blocks to newer blocks, which is a\n * block array.\n * \n * Parameter `prevBlock` should always be a valid block (NEVER pass un-verified\n * blocks received from peers). Or when the subchain starts at genesis block, \n * do not pass parameter `prevBlock` (leave it as `undefined`).\n */\nconst verifySubchain = (subchain, prevBlock) => {\n  for (let block of subchain) {\n    if (!verifyBlock(block, prevBlock)) {\n      return false;\n    }\n    prevBlock = block;\n  }\n  return true;\n};\n\n/**\n * Similar to `verifySubchain`.\n */\nconst verifyHeaderChain = (headerChain, prevHeader) => {\n  for (let block of headerChain) {\n    if (!verifyHeader(block, prevHeader)) {\n      return false;\n    }\n    prevHeader = block;\n  }\n  return true;\n};\n\nexports.sha256 = sha256;\nexports.calcMerkleRoot = calcMerkleRoot;\nexports.verifyMerkleRoot = verifyMerkleRoot;\nexports.leadingZeroBits = leadingZeroBits;\nexports.verifyLitemsg = verifyLitemsg;\nexports.verifyBlock = verifyBlock;\nexports.verifySubchain = verifySubchain;\nexports.verifyHeader = verifyHeader;\nexports.verifyHeaderChain = verifyHeaderChain;\n\nif (BUILD_TARGET === 'node') {\n  // node\n\n  exports.mine = mine;\n\n} else {\n  // browser\n\n  // nothing here\n}\n","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/helpers/slicedToArray\");","module.exports = require(\"babel-runtime/core-js/map\");","module.exports = require(\"babel-runtime/core-js/number/max-safe-integer\");","module.exports = require(\"babel-runtime/core-js/array/from\");","if (BUILD_TARGET === 'node') {\n  // node (output as commonjs)\n\n  exports.Node = require('./src/clients/node');\n  exports.ThinNode = require('./src/clients/thinnode');\n  exports.FullNode = require('./src/clients/fullnode');\n\n  exports.createLitemsg = require('./src/liteprotocol/entities/litemsg');\n  exports.LiteProtocol = require('./src/liteprotocol/liteprotocol');\n  exports.ThinLiteProtocol = require('./src/liteprotocol/thinprotocol');\n  module.exports = exports =  { ...exports, ...require('./src/liteprotocol/messages') };\n\n  module.exports = exports = { ...exports, ...require('./src/utils/litecrypto') };\n  module.exports = exports = { ...exports, ...require('./src/utils/time') };\n  \n} else {\n  // browser (output as umd)\n\n  exports.Node = require('./src/clients/node');\n  exports.ThinNode = require('./src/clients/thinnode');\n\n  module.exports = exports = { ...exports, ...require('./src/utils/litecrypto') };\n}\n","module.exports = require(\"uuid/v1\");","module.exports = require(\"levelup\");","const WSClient = require('./wsc');\nconst { getSocketAddress } = require('./utils/network');\nconst { getCurTimestamp } = require('./utils/time');\n\nif (BUILD_TARGET === 'node') {\n  // running in node\n  var EventEmitter = require('events');\n  var WSServer = require('./wss');\n} else {\n  // running in browser\n  var EventEmitter = require('wolfy87-eventemitter');\n}\n\n/**\n * This class is the abstraction of \"node\" (litenode) inside the litemessage\n * peer-to-peer network. It is on top of Websocket layer by composing `WSServer`\n * when runing in nodejs environment, or `WSClient` when runing as \"thin\" node in\n * both nodejs and browser environments. \n * \n * This class is protocol-agnostic, meaning it doesn't assume any detail of\n * the implmentation of litemessage's protocol. Instead, it just provides some\n * APIs and async events for implementing the protocol and any kind of litemessage\n * client (\"thin\" / \"full\" node) on top of that.\n * \n * You must provide a UUID to the contructor. The UUID is the unique identifier \n * identify a unique node inside the peer-to-peer network.\n * \n * By default, node use 1113 as the daemon port inside the network.\n * \n * TODO log handshake communication traffic\n * TODO use debug config, also support cli to specify\n * TODO support specifying the interface to bind\n * \n * #### Events\n * - `socketconnect` - low level socket connection (simple wrapper around wss's)\n * - `peerconnect` - high level peer connection\n * - `peerdisconnect` - high level peer disconnection\n * - `message/${message_type}` - high level protocol-specific messages\n * \n * All other events are handled by low level abstraction, so you don't need to\n * worry about : P\n */\nclass LiteNode extends EventEmitter {\n  constructor(uuid, { port = 1113, debug = false, noserver = false } = {}) {\n    super();\n    this.socketConnectHandler = this.socketConnectHandler.bind(this);\n    this.socketMessageHandler = this.socketMessageHandler.bind(this);\n    this.socketCloseHandler = this.socketCloseHandler.bind(this);\n\n    this.uuid = uuid;\n    this.daemonPort = noserver ? undefined : port;\n    this.debugPort = port + 1;\n    this.noserver = noserver;\n\n    // node's uuid => peer\n    this.peers = {};\n    // remote socket addresses (str) => peers\n    this.socketsToPeers = {};\n\n    // used for debugging (view all protocol messages since start)\n    this.debug = debug;\n    this.messageLogs = [];\n\n    // create the underlyng websocket server\n    this.wss = noserver ? new WSClient() : new WSServer(port);\n    if (!noserver) {\n      // when bound to an network interface\n      this.wss.on('listening', (port) => {\n        console.log(`${uuid}: Start listening on port ${port}.`);\n        if (debug) { console.log('Debug mode is enabled.'); }\n      });\n    }\n    // when new connection established\n    this.wss.on('connection', this.socketConnectHandler);\n  }\n\n  /**\n   * Create a proxy to intercept the `send` function call,\n   * mainly for debugging / logging.\n   */\n  createSocketProxy(socket, remoteUuid) {\n    if (!this.debug) { return socket; }\n\n    const messageLogs = this.messageLogs;\n\n    const handler = {\n      get: (socket, propName) => {\n        if (propName !== 'send') { return socket[propName]; }\n        // return the wrapper function as a proxy\n        return function (data, options, callback) {\n          messageLogs.push({\n            peer: remoteUuid,\n            dir: 'outbound',\n            msg: JSON.parse(data),\n            time: getCurTimestamp('s')\n          });\n\n          return socket.send(data, options, callback);\n        };\n      }\n    };\n    // create socket proxy and return\n    return new Proxy(socket, handler);\n  }\n\n  /**\n   * Note that you cannot have more than one socket to a single URL.\n   * And also note that error could be thrown if url is invalid.\n   * Failure of connection will only cause some log (won't crash\n   * the application).\n   * \n   * Right now, there's no way to get notified when it fail to connect\n   * (such as because of timeout) except for a log mentioned before.\n   */\n  createConnection(url) {\n    return this.wss.createConnection(url);\n  }\n\n  /**\n   * @param {string} msg \n   * @param {Array<string>} exUuids \n   */\n  broadcast(msg, exUuids = []) {\n    let peers = Object.keys(this.peers)\n      .filter(uuid => !exUuids.includes(uuid))\n      .map(uuid => this.peers[uuid]);\n\n    for (let peer of peers) {\n      try {\n        peer.send(msg);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  /**\n   * @param {Object} jsonObj \n   * @param {Array<string>} exUuids \n   */\n  broadcastJson(jsonObj, exUuids) {\n    this.broadcast(JSON.stringify(jsonObj), exUuids);\n  }\n\n  socketConnectHandler(socket, incoming) {\n    let socketAddress = getSocketAddress(socket);\n    if (incoming) {\n      console.log(`Accepted socket connection from ${socketAddress}.`);\n    } else {\n      console.log(`Established socket connection to ${socketAddress}.`);\n    }\n\n    socket.on('close', (code, reason) =>\n      this.socketCloseHandler(code, reason, socket));\n\n    // notify listeners\n    this.emit('socketconnect', socket, incoming);\n  }\n\n  socketMessageHandler(msg, peer) {\n    let msgObj = null;\n    try { msgObj = JSON.parse(msg); } catch (e) {}\n    \n    if (msgObj && msgObj['messageType']) {\n      if (this.debug) {\n        // note that only logs valid procotol messages\n        this.messageLogs.push({\n          peer: peer.uuid,\n          dir: 'inbound',\n          msg: msgObj,\n          time: getCurTimestamp('s')\n        });\n      }\n\n      this.emit(`message/${msgObj['messageType']}`, msgObj, peer);\n    }\n  }\n\n  socketCloseHandler(code, reason, socket) {\n    let socketAddress = getSocketAddress(socket);\n    let peer = this.socketsToPeers[socketAddress]\n\n    if (peer) {\n      delete this.peers[peer.uuid];\n      delete this.socketsToPeers[socketAddress]\n      console.log(`Disconnected from ${peer.uuid}@${socketAddress}.`);\n      // notify listeners\n      this.emit('peerdisconnect', peer);\n    }\n    console.log(`Closed socket connection with ${socketAddress} (${code || 'N/A'} | ${reason || 'N/A'}).`);\n  }\n\n  /**\n   * Add new peer to peer collection of this node. The protocol\n   * implmementation should call this after a protocol-specific\n   * handshake completes (this class is protocol agnostic).\n   */\n  addNewPeer(peer) {\n    let { uuid, socket, incoming, nodeType } = peer;\n    let socketAddress = getSocketAddress(socket);\n\n    if (this.peers.hasOwnProperty(uuid)) {\n      console.warn(`Established connection with a connected peer (${uuid}@${socketAddress});\\n`\n        + `so, going to disconnect from it.`);\n      socket.close(undefined, 'DOUBLE_CONNECT');\n      return;\n    }\n\n    peer.socket = socket = this.createSocketProxy(socket, uuid);\n    this.peers[uuid] = peer;\n    this.socketsToPeers[socketAddress] = peer;\n    socket.on(BUILD_TARGET === 'node' ? 'message' : 'data', (message) => \n      this.socketMessageHandler(message, peer));\n\n    if (incoming) {\n      console.log(`Accepted connection from ${peer.uuid}@${socketAddress} (${nodeType}).`);\n    } else {\n      console.log(`Established connection to ${peer.uuid}@${socketAddress} (${nodeType}).`);\n    }\n\n    // notify listeners\n    this.emit('peerconnect', peer);\n  }\n\n  /**\n   * Get some useful information about this node.\n   */\n  getInfo() {\n    let network = this.wss.getInfo();\n\n    if (network.sockets) {\n      for (let socketInfo of network.sockets) {\n        let peer = this.socketsToPeers[socketInfo.remoteSocketAddr];\n\n        socketInfo.remoteUuid = peer.uuid;\n        socketInfo.remoteDaemonPort = peer.daemonPort;\n      }\n    }\n\n    return {\n      uuid: this.uuid,\n      daemonPort: this.daemonPort,\n      network,\n    };\n  }\n\n  /**\n   * Close this node (both server and outgoing socket connections will\n   * be closed)\n   */\n  close() {\n    this.removeAllListeners();\n    this.wss.close();\n  }\n}\n\nmodule.exports = LiteNode;\n","const { getSocketAddress, getSocketInfo, getReadyState } = require('./utils/network');\n\nif (BUILD_TARGET === 'node') {\n  // run in node\n\n  var EventEmitter = require('events');\n  var { URL } = require('url');\n  var WebSocket = require('ws');\n\n} else {\n  // run in browser\n\n  var EventEmitter = require('wolfy87-eventemitter');\n\n  // simple-websocket is an event-emitter based websocket\n  // implementation, which supports running in browser\n  var WebSocket = require('simple-websocket');\n  // shim some methods\n  Object.getPrototypeOf(WebSocket).close = function () {\n    this.destroy();\n  };\n  Object.getPrototypeOf(WebSocket).terminate = function () {\n    this.destroy();\n  };\n}\n\n/**\n * Provide abstraction for underlaying transportation protocol. It behaves \n * both like a server and a client - it will connect to several clients, \n * and also several servers (P2P network).\n * \n * The P2P network is a directed graph with bidirectional communication channels.\n * \n * ##### Events\n * - `connection` (socket, incoming) - low level socket connection\n * \n * For all other events, use the underlying web socket object.\n * \n * TODO shim ping/pong for browser env\n */\nclass WSClient extends EventEmitter {\n  constructor() {\n    super();\n    this.connectionHandler = this.connectionHandler.bind(this);\n    \n    // map remote socket addresses (ip:port) to sockets\n    this.servers = {};\n    \n    // set up heartbeats\n    if (BUILD_TARGET === 'node') {\n      this.timer = setInterval(this.genHeartbeat(), 60000);\n    }\n  }\n\n  /**\n   * Note that you cannot have more than one socket to a single URL.\n   * And also note that error could be thrown if url is invalid.\n   * Failure of connection will only cause some logs (won't crash\n   * the application).\n   * \n   * Right now, there's no way to get notified when it fails to connect\n   * (such as because of timeout) except for a log mentioned before.\n   */\n  createConnection(url) {\n    let socketAddress = null;\n    let remoteDaemonPort = null;\n    try {\n      ({ host: socketAddress, port: remoteDaemonPort } = new URL(url));\n      if (!socketAddress || !remoteDaemonPort.match(/^\\d+$/)) { throw new Error(); }\n    } catch (err) {\n      throw new Error(`Wrong url (${url}) to connect.`);\n    }\n\n    let prevSocket = this.servers[socketAddress];\n    if (prevSocket && this.socketAlive(prevSocket)) {\n      console.warn(`Tried to connect to same url (${url}) twice. Operation aborted.`);\n      return;\n    }\n\n    let socket = new WebSocket(url, { handshakeTimeout: 10000 });\n\n    socket.on('error', (err) =>\n      console.log(`Unable to establish connection to ${url}. Details:\\n${err}.`));\n\n    socket.on(BUILD_TARGET === 'node' ? 'open' : 'connect', () => {\n      let prevSocket = this.servers[socketAddress];\n      if (prevSocket && this.socketAlive(prevSocket)) {\n        // TODO investigate memory leak\n        socket.on('close', () => socket.removeAllListeners());\n        socket.close(undefined, 'DOUBLE_CONNECT');\n        return;\n      }\n      socket.removeAllListeners('error');\n      this.connectionHandler(socket, false);\n      this.servers[socketAddress] = socket;\n    });\n  }\n\n  genHeartbeat() {\n    let noop = () => {};\n    return () => {\n      for (let socket of Object.values(this.servers)) {\n        if (this.socketAbnormal(socket)) {\n          socket.terminate();\n        }\n        // set socket `alive` to false, later pong response\n        // from client will recover `alive` from false to true\n        socket.alive = false;\n        socket.ping(noop);\n      }\n    }\n  }\n\n  /**\n   * @param {*} socket                  the underlaying socket\n   * @param {boolean} incoming          whether the connection is incoming\n   */\n  connectionHandler(socket, incoming) {\n    let socketAddress = getSocketAddress(socket);\n    socket.alive = true;\n    socket.on('message', () => socket.alive = true);\n    socket.on('pong', () => socket.alive = true);\n    socket.on('close', () => {\n      socket.alive = false;\n      socket.removeAllListeners();\n      if (socket === this.servers[socketAddress]) {\n        delete this.servers[socketAddress];\n      }\n    });\n    socket.on('error', err => {\n      console.log(err);\n      socket.terminate();\n    });\n    // notify subscribers\n    this.emit('connection', socket, incoming);\n  }\n\n  socketAbnormal(socket) {\n    return !socket.alive && getReadyState(socket) === WebSocket.OPEN;\n  }\n\n  socketAlive(socket) {\n    return getReadyState(socket) === WebSocket.OPEN;\n  }\n\n  /**\n   * Get some useful information about the network.\n   */\n  getInfo() {\n    let sockets = [];\n\n    for (let socket of Object.values(this.servers)) {\n      sockets.push({\n        dir: 'outbound',\n        ...getSocketInfo(socket)\n      });\n    }\n\n    return {\n      sockets\n    };\n  }\n\n  /**\n   * Close this node (both server and outgoing socket connections will\n   * be closed)\n   */\n  close() {\n    this.removeAllListeners();\n    clearInterval(this.timer);\n  }\n}\n\nmodule.exports = WSClient;\n","module.exports = require(\"simple-websocket\");","module.exports = require(\"level-js\");","const Node = require('./node');\nconst ThinLiteProtocol = require('../liteprotocol/thinprotocol');\n\nconst NODE_TYPE = 'thin';\n\nclass ThinNode extends Node {\n  constructor(dbPath, { protocolClass = ThinLiteProtocol, initPeerUrls = [], port, debug } = {}) {\n    super(NODE_TYPE, dbPath, port, protocolClass, initPeerUrls, debug, true);\n  }\n\n  static get nodeType() {\n    return NODE_TYPE;\n  }\n\n  close() {\n    super.close();\n  }\n}\n\nmodule.exports = ThinNode;\n","const P2PProtocol = require('../p2pprotocol/p2protocol');\nconst LiteProtocolStore = require('./store');\nconst HandshakeManager = require('./handshake');\nconst Blockchain = require('../utils/blockchain');\nconst {\n  verifyHeader, verifyHeaderChain\n} = require('../utils/litecrypto');\nconst {\n  messageTypes, messageValidators, getHeaders, getBlocks\n} = require('./messages');\n\nif (BUILD_TARGET === 'node') {\n  // run in node\n  var createRestServer = require('./rest');\n} else {\n  // run in browser\n}\n\n// protocol version\nconst VERSION = 1;\n// node types to re/connect automatically\nconst AUTO_CONN_NODE_TYPES = ['full'];\n\n/**\n * An experimental \"thin\" litemessage protocol implementation.\n * The \"thin\" here means this is a light weight implementation,\n * similar to SPV nodes in Bitcoin. Typically, client nodes\n * (such as used by common users with browser or CLI) will use\n * this tpye of implementation.\n * \n * **NOTE** that this is an experimental implementation, so it\n * probably will be refactored in the future.\n */\nclass ThinLiteProtocol extends P2PProtocol {\n  static get ver() {\n    return VERSION;\n  }\n\n  constructor(node) {\n    super(node, { nodeTypes: AUTO_CONN_NODE_TYPES });\n    this.invHandler = this.invHandler.bind(this);\n    this.headersHandler = this.headersHandler.bind(this);\n    this.peerConnectHandler = this.peerConnectHandler.bind(this);\n\n    this.litestore = new LiteProtocolStore(node.db);\n    // a blockchain manager\n    this.blockchain = new Blockchain(this.litestore);\n\n    // wait for blockchain initializing itself\n    this.blockchain.on('ready', () => this.init());\n    // or upon error\n    this.blockchain.on('error', err => {\n      console.error(err);\n      process.exit(1);\n    });\n  }\n\n  init() {\n    // register message/connection handlers\n    this.litenode.on(`message/${messageTypes.inv}`, this.invHandler);\n    this.litenode.on(`message/${messageTypes.headers}`, this.headersHandler);\n    this.litenode.on('peerconnect', this.peerConnectHandler);\n\n    this.handshake = new HandshakeManager(this);\n\n    if (this.litenode.debug && BUILD_TARGET === 'node') {\n      // create and run rest server\n      let debugPort = this.litenode.debugPort;\n      createRestServer(this).listen(debugPort);\n      console.log(`Debugging RESTful API server listening on port ${debugPort}.`);\n    }\n\n    // protocol handling setup is ready now\n    this.emit('ready');\n  }\n\n  /**\n   * If the given litemessage id is in LevelDB's litemessage index.\n   */\n  async hasLitemsg(litemsgId) {\n    return await this.litestore.hasLitemsg(litemsgId);\n  }\n\n  async invHandler({ messageType, ...payload }, peer) {\n    try {\n      messageValidators[messageType](payload);\n      // Note the \"blocks\" here either is a single block just\n      // mined by peer, or is a sub blockchain, which, in\n      // other words, means those blocks are consecutive.\n      // This is just due to how the protocol is designed.\n      let { blocks } = payload;\n      let blocksToGet = [];\n\n      // Filter out blocks already have (blocks off main branch \n      // still as being haven). Also note that those blocks haven\n      // by the current node, if any, must always certainly reside\n      // at the beginning of received `inv`'s blockchain. Again,\n      // this is just due to how the protocol is designed.\n      for (let blockId of blocks) {\n        if (!(await this.blockchain.hasBlock(blockId, false))) {\n          blocksToGet.push(blockId);\n        }\n      }\n\n      if (blocksToGet.length) {\n        peer.sendJson(\n          getHeaders({ blocks: blocksToGet })\n        );\n      }\n\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  async headersHandler({ messageType, ...payload }, peer) {\n    try {\n      messageValidators[messageType](payload);\n      // `blocks` is only header (don't have body)\n      let { blocks } = payload;\n\n      // filter out invalid blocks (headers)\n      blocks = blocks.filter(block => verifyHeader(block));\n      blocks.sort((a, b) => a.height - b.height);\n\n      let headBlockId = this.blockchain.getHeadBlockIdSync();\n\n      if (blocks.length && blocks[blocks.length - 1].height > this.blockchain.getCurHeightSync()) {\n        if (blocks.length === 1) {\n          let block = blocks[0];\n\n          if (block.prevBlock === headBlockId) {\n            this.blockchain.append(block);\n          } else {\n            let blockLocators = this.blockchain.getLocatorsSync();\n            peer.sendJson(getBlocks({ blockLocators }));\n          }\n        } else {\n          // Note that `prevBlockId` and `prevBlock` down below refer to same block.\n          // Later, they will be used for traversing backward along the blockchain.\n          let prevBlockId = blocks[0].prevBlock;\n          let prevBlock = prevBlockId ? \n            (await this.blockchain.getBlock(prevBlockId)) : \n            undefined;\n\n          if (verifyHeaderChain(blocks, prevBlock)) {\n            // For efficiency, node doesn't fetch blocks on forked branch which it already \n            // has. The `litemsg_${litemsg_id}` of these mentioned blocks might be records\n            // on the main branch (before appending). So here, suppose the previous\n            // block of appended blocks is not on main branch, we need to extend from\n            // the appended blocks backwards to until a block which is on the main \n            // branch, or until the genesis block (of the forked branch), whichever reaches\n            // first. And then rewrite all `litemsg_${litemsg_id}` records so that all \n            // litemessages are correctly indexed after switching to another branch.\n\n            let extendedBlocks = [];\n\n            while (prevBlockId && !this.blockchain.onMainBranchSync(prevBlockId)\n              && headBlockId === this.blockchain.getHeadBlockIdSync()) {\n\n              extendedBlocks.unshift(prevBlock);\n\n              prevBlockId = prevBlock.prevBlock;\n              prevBlock = prevBlockId ?\n                (await this.blockchain.getBlock(prevBlockId)) :\n                undefined;\n            }\n\n            if (headBlockId === this.blockchain.getHeadBlockIdSync()) {\n              // switch the blockchain to another branch,\n              // for efficiency, don't await it finishing\n              // (no await here)\n              this.blockchain.appendAt([...extendedBlocks, ...blocks]);\n            }\n          }\n        }\n      }\n\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  peerConnectHandler(peer) {\n    if (peer.nodeType === 'full' && this.node.peers('full').length === 1) {\n      // wait for 30 seconds to retrieve blocks\n      // because of concorrent resolving (it takes\n      // time to construct connections with peers)\n      setTimeout(() => {\n        let blockLocators = this.blockchain.getLocatorsSync();\n        peer.sendJson(getBlocks({ blockLocators }));\n      }, 60000);\n    }\n\n    // TODO\n    // peer._resolver = new InventoryResolver(peer, this);\n  }\n\n  close() {\n    this.handshake.close();\n    super.close();\n  }\n}\n\nmodule.exports = ThinLiteProtocol;\n","const P2PProtocolStore = require('./store');\nconst {\n  messageTypes, messageValidators, fetchPeers, returnPeers\n} = require('./messages');\nconst { pickItems } = require('../utils/common');\n\nif (BUILD_TARGET === 'node') {\n  // running in node\n\n  var EventEmitter = require('events');\n  var { URL } = require('url');\n  var dns = require('dns');\n  var { promisify } = require('util');\n\n  // look up dns records\n  var lookup = promisify(dns.lookup);\n\n} else {\n  // running in browser\n\n  var EventEmitter = require('wolfy87-eventemitter');\n}\n\n/**\n * A abstract peer-to-peer protocol. You should NOT bind this protocol directly to \n * an implementation of node client. Instead, you should extend this protocol.\n * \n * NOTE all subclass implementations MUST emit a `ready` event (a protocol is also\n * an event emitter).\n * \n * NOTE the `nodeTypes` option, which specifies the types of node to connect automatically\n * when connecting to few of these types of node. The threshold is set by `minPeerNum`\n * option. The connected peers will also be persisted. When node is restarted, it will\n * reconnect those peristed peers.\n * \n * NOTE if you don't explicitly provde `nodeTypes` option, then it won't have any\n * auto-connecting feature as well as the feature of auto peer persistance.\n */\nclass P2PProtocol extends EventEmitter {\n  /**\n   * @param {*} node      full node, thin node, or...\n   * @param {*} options\n   *            nodeTypes nodeTypes node types to which a node will try to establish connection\n   *                      automatically. For instance, you want to maintain connected\n   *                      `full` nodes at least with a specific number, but you don't\n   *                      care how many `thin` nodes are connected. So you should only\n   *                      give `full` here, instead of both.\n   *           minPeerNum the minimal number of peers of type specified by `nodeTypes`\n   */\n  constructor(node, { nodeTypes = [], minPeerNum = 8 } = {}) {\n    super();\n\n    if (new.target === P2PProtocol) {\n      throw new TypeError(\"Cannot construct P2PProtocol instances directly.\");\n    }\n\n    this.persistPeerUrls = this.persistPeerUrls.bind(this);\n    this.fetchPeersHandler = this.fetchPeersHandler.bind(this);\n    this.returnPeersHandler = this.returnPeersHandler.bind(this);\n\n    this.node = node;\n    this.litenode = node.litenode;\n\n    this.intervalTimers = [];\n    this.store = new P2PProtocolStore(node.db);\n    \n    this.nodeTypes = nodeTypes;\n    this.minPeerNum = minPeerNum;\n\n    // register message handlers\n    this.litenode.on(`message/${messageTypes['fetchPeers']}`, this.fetchPeersHandler);\n    this.litenode.on(`message/${messageTypes['returnPeers']}`, this.returnPeersHandler);\n\n    if (nodeTypes.length) {\n      this.connectToLastConnectedPeers();\n\n      // periodically fetch more peers of given node types\n      this.intervalTimers.push(\n        setInterval(() => {\n          if (this.node.peers(nodeTypes).length < minPeerNum) {\n            this.litenode.broadcastJson(fetchPeers({ nodeTypes }));\n          }\n        }, 40000)\n      );\n\n      // periodically persist peer urls\n      this.intervalTimers.push(\n        setInterval(this.persistPeerUrls, 120000)\n      );\n    }\n  }\n\n  async connectToLastConnectedPeers() {\n    try {\n      let initUrls = this.node.initPeerUrls;\n\n      if (BUILD_TARGET === 'node') {\n        // initial peer urls can be hostnames, so perform dns queries first\n        var addresses = await Promise.all(\n          initUrls.map(url => lookup(new URL(url).hostname, { family: 4 }))\n        );\n      }\n\n      initUrls = initUrls.map((url, i) => {\n        url = new URL(url);\n        if (addresses) {\n          url.hostname = addresses[i].address\n        }\n        return url.toString().replace(/\\/$/, '');\n      });\n\n      (await this.store.readCurPeerUrls())\n        .filter(url => !initUrls.includes(url))\n        .forEach(url => this.litenode.createConnection(url));\n\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  }\n\n  async persistPeerUrls() {\n    try {\n      let peerUrls = this.node.peers(this.nodeTypes)\n        .map(peer => peer.url);\n      await this.store.writeCurPeerUrls(peerUrls);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  fetchPeersHandler({ messageType, ...payload }, peer) {\n    try {\n      // validate the received message\n      messageValidators[messageType](payload);\n      \n      let { nodeTypes, limit } = payload;\n      let connectedPeerUrls = this.node.peers(nodeTypes)\n        .map(peer => peer.url);\n      if (connectedPeerUrls.includes(peer.url)) {\n        connectedPeerUrls.splice(connectedPeerUrls.indexOf(peer.url), 1);\n      }\n      let peerUrls = pickItems(connectedPeerUrls, limit);\n      let resMsg = returnPeers({ nodeTypes, peerUrls });\n      peer.sendJson(resMsg);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  returnPeersHandler({ messageType, ...payload }, peer) {\n    try {\n      // validate the received message\n      messageValidators[messageType](payload);\n      \n      let { nodeTypes, peerUrls } = payload;\n      let connectedPeerUrls = this.node.peers(nodeTypes)\n        .map(peer => peer.url);\n      peerUrls.filter(url => !connectedPeerUrls.includes(url))\n        .forEach(url => this.litenode.createConnection(url));\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  close() {\n    this.removeAllListeners();\n    this.intervalTimers.forEach(t => clearInterval(t));\n  }\n}\n\nmodule.exports = P2PProtocol;\n","const prefix = 'p2p/';\n\nconst genKey = key => prefix + key;\n\nclass P2PProtocolStore {\n  constructor(db) {\n    this.db = db;\n  }\n\n  /**\n   * Flush current connected peers' URLs into DB. \n   * Note that you should only provide peers with \n   * desired `nodeType`s.\n   */\n  async writeCurPeerUrls(peerUrls) {\n    let data = JSON.stringify(peerUrls);\n    return this.db.put(genKey('cur_peer_urls'), data);\n  }\n\n  async readCurPeerUrls() {\n    try {\n      let buf = await this.db.get(genKey('cur_peer_urls'));\n      return JSON.parse(buf.toString());\n    } catch (err) {\n      if (err.notFound) { return []; }\n      throw err;\n    }\n  }\n}\n\nmodule.exports = P2PProtocolStore;\n","// message type constants\nconst messageTypes = Object.freeze({\n  fetchPeers: 'p2p/fetch_peers',\n  returnPeers: 'p2p/return_peers'\n});\n\n\n/**\n * \n */\nconst fetchPeers = ({ nodeTypes, limit = 20 } = {}) => ({\n  messageType: messageTypes.fetchPeers, \n  nodeTypes, \n  limit\n});\n\nfetchPeers.validate = ({ nodeTypes, limit }) => {\n  if (!(nodeTypes instanceof Array) || nodeTypes.length === 0) {\n    throw new Error('p2p/: Invalid message, field nodeTypes.');\n  }\n  if (typeof limit !== 'number' || limit <= 0) {\n    throw new Error('p2p/: Invalid message, field limit.');\n  }\n};\n\n\n/**\n * \n */\nconst returnPeers = ({ nodeTypes, peerUrls = [] } = {}) => ({\n  messageType: messageTypes.returnPeers, \n  nodeTypes, \n  peerUrls\n});\n\nreturnPeers.validate = ({ nodeTypes, peerUrls }) => {\n  if (!(nodeTypes instanceof Array) || nodeTypes.length === 0) {\n    throw new Error('p2p/: Invalid message, field nodeTypes.');\n  }\n  if (!(peerUrls instanceof Array)) {\n    throw new Error('p2p/: Invalid message, field peerUrls.');\n  }\n};\n\n\n// validators\nconst messageValidators = Object.freeze({\n  [messageTypes.fetchPeers]: fetchPeers.validate,\n  [messageTypes.returnPeers]: returnPeers.validate\n});\n\n\nexports.messageTypes = messageTypes;\nexports.messageValidators = messageValidators;\nexports.fetchPeers = fetchPeers;\nexports.returnPeers = returnPeers;\n","if (BUILD_TARGET === 'node') {\n  // run in node\n  var path = require('path');\n} else {\n  // run in browser\n}\n\nconst isValidJson = (json) => {\n  if (typeof json !== 'string' || !json) {\n    return false;\n  }\n\n  try {\n    JSON.parse(json);\n    return true;\n  } catch (e) { }\n  return false;\n};\n\n/**\n * From 0 (inclusive) to `max` (exclusive).\n */\nconst randomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\n/**\n * Randomly pick `num` items from an array. Note that original array \n * won't be altered. And also the order of items won't be preserved \n * in the picked array.\n */\nconst pickItems = (array, num) => {\n  let copiedArray = [...array];\n  let picked = [];\n  num = Math.min(array.length, num);\n  for (let i = 0; i < num; i++) {\n    picked.push(...copiedArray.splice(randomInt(copiedArray.length), 1));\n  }\n  return picked;\n};\n\nconst sliceItems = (array, slices) => {\n  slices = Math.max( Math.min(array.length, slices), 1 );\n\n  let l = Math.floor(array.length / slices);\n  let sliced = [];\n\n  for (let i = 0; i < slices; i++) {\n    if (i + 1 === slices) {\n      sliced.push( array.slice(l * i) );\n    } else {\n      sliced.push( array.slice(l * i, l * (i + 1)) );\n    }\n  }\n  return sliced;\n};\n\nconst parseChunk = (buffer) => {\n  if (buffer.length % 32) { throw new Error('Invalid chunk buffer.'); }\n\n  let hashes = [];\n  for (let i = 0; i < buffer.length; i += 32) {\n    hashes.push(buffer.slice(i, i + 32).toString('hex'));\n  }\n  return hashes;\n};\n\nif (BUILD_TARGET === 'node') {\n  // run in node\n\n  /**\n   * project's root path, of course this file cannot be moved around\n   */\n  var getAbsRootPath = () => {\n    return path.join(__dirname, '../..');\n  };\n\n  exports.getAbsRootPath = getAbsRootPath;\n\n} else {\n  // run in browser\n}\n\nexports.isValidJson = isValidJson;\nexports.randomInt = randomInt;\nexports.pickItems = pickItems;\nexports.sliceItems = sliceItems;\nexports.parseChunk = parseChunk;\n","const prefix = 'lite/';\n\nconst genKey = key => prefix + key;\n\nclass LiteProtocolStore {\n  constructor(db) {\n    this.db = db;\n  }\n\n  static get genKey() {\n    return genKey;\n  }\n\n  // async writeHeadBlock(blockId) {\n  //   return this.db.put(genKey('head_block'), blockId);\n  // }\n\n  /**\n   * Note that we don't index litemessage's content, which is part of a block.\n   * So in order to get the content of a litemessage, you must get the the block\n   * where the given litemessage resides first.\n   * \n   * This function return the block id (no matter the block in the main branch or\n   * not) where the given litemessage resides, or undefined if we don't have the\n   * litemessage in any block.\n   */\n  async readLitemsg(litemsgId) {\n    try {\n      let buf = await this.db.get(genKey(`litemsg_${litemsgId}`));\n      return buf.toString();\n\n    } catch (err) {\n      if (err.notFound) { return undefined; }\n      throw err;\n    }\n  }\n\n  async removeLitemsg(litemsgId) {\n    return this.db.del(genKey(`litemsg_${litemsgId}`));\n  }\n\n  /**\n   * TODO might change this: we don't need to have index for litemessages?\n   * might just litemessage's location index (in which block).\n   */\n  // async writeLitemsg(litemsg) {\n  //   if (typeof litemsg.hash !== 'string') {\n  //     throw new Error('Invalid litemessage hash.');\n  //   }\n  //   return this.db.put(genKey(`litemsg_${litemsg.hash}`), litemsg);\n  // }\n\n  async hasLitemsg(litemsgId) {\n    return (await this.readLitemsg(litemsgId)) !== undefined;\n  }\n\n  // following is block-related ...\n\n  /**\n   * Return the head block's **id** (or undefined when there's no\n   * block in the blockchain)\n   */\n  async readHeadBlock() {\n    try {\n      let buf = await this.db.get(genKey('head_block'));\n      return buf.toString();\n    } catch (err) {\n      if (err.notFound) { return undefined; }\n      throw err;\n    }\n  }\n\n  // async writeBlock(block) {\n  //   if (typeof block.hash !== 'string') {\n  //     throw new Error('Invalid block hash.');\n  //   }\n  //   return this.db.put(genKey(`block_${block.hash}`), block);\n  // }\n\n  /**\n   * Return the whole block specified by the given block id.\n   * If block doesn't exist, `undefined` will be returned.\n   */\n  async readBlock(blockId) {\n    try {\n      let buf = await this.db.get(genKey(`block_${blockId}`));\n      return JSON.parse(buf.toString());\n      \n    } catch (err) {\n      if (err.notFound) { return undefined; }\n      throw err;\n    }\n  }\n\n  /**\n   * Append one more block on top of the current head block.\n   */\n  async appendBlock(block, batchOps) {\n    if (typeof block.hash !== 'string') {\n      throw new Error('Invalid block hash.');\n    }\n\n    let ops = [\n      { type: 'put', key: genKey(`block_${block.hash}`), value: JSON.stringify(block) },\n      { type: 'put', key: genKey('head_block'), value: block.hash }\n    ];\n    if (block.litemsgs) {\n      for (let litemsg of block.litemsgs) {\n        ops.push({ type: 'put', key: genKey(`litemsg_${litemsg.hash}`), value: block.hash });\n      }\n    }\n    if (batchOps) {\n      ops = [...ops, ...batchOps];\n    }\n\n    return this.db.batch(ops);\n  }\n\n  /**\n   * Sometimes forks could happen. Call this to switch to\n   * another fork.\n   * \n   * @param {*} blocks  blocks from another branch to switch\n   */\n  async appendBlocksAt(blocks, batchOps) {\n    if (!blocks.length) { return; }\n\n    let headBlock = blocks[blocks.length - 1];\n    let ops = [];\n\n    for (let block of blocks) {\n      if (typeof block.hash !== 'string') { throw new Error('Invalid block hash.'); }\n\n      ops.push({ type: 'put', key: genKey(`block_${block.hash}`), value: JSON.stringify(block) });\n      if (block.litemsgs) {\n        for (let litemsg of block.litemsgs) {\n          ops.push({ type: 'put', key: genKey(`litemsg_${litemsg.hash}`), value: block.hash });\n        }\n      }\n    }\n    ops.push({ type: 'put', key: genKey('head_block'), value: headBlock.hash });\n\n    if (batchOps) { ops = [...ops, ...batchOps]; }\n\n    return this.db.batch(ops);\n  }\n}\n\nmodule.exports = LiteProtocolStore;\n","const Peer = require('../peer');\nconst {\n  messageValidators, info, infoAck,\n  messageTypes: { info: infoType, infoAck: infoAckType }\n} = require('./messages');\nconst { getCurTimestamp } = require('../utils/time');\nconst { getSocketAddress } = require('../utils/network');\n\nif (BUILD_TARGET === 'node') {\n  // running in node\n\n  var EventEmitter = require('events');\n\n} else {\n  // running in browser\n\n  var EventEmitter = require('wolfy87-eventemitter');\n}\n\n// ********************* requiring ends *********************\n\n// allowed message types during handshake\nconst MSG_TYPES = [infoType, infoAckType];\n\nclass PendingSocket {\n  constructor(socket, incoming) {\n    // the pending socket itself\n    this.socket = socket;\n\n    // inbound or outbound\n    this.incoming = incoming;\n\n    // 'INIT'\n    // 'INFO_SENT'\n    // 'ESTABLISHED'\n    this.state = 'INIT';\n\n    // the timestamp when socket is created\n    this.timestamp = getCurTimestamp();\n\n    // remote info\n    this.uuid = undefined;\n    this.nodeType = undefined;\n    this.daemonPort = undefined;\n  }\n}\n\nclass HandshakeManager extends EventEmitter {\n  constructor(p2pProtocol) {\n    super();\n    this.socketConnectHandler = this.socketConnectHandler.bind(this);\n\n    this.litenode = p2pProtocol.litenode;\n    this.uuid = p2pProtocol.litenode.uuid;\n    this.nodeType = p2pProtocol.node.nodeType;\n    this.daemonPort = p2pProtocol.litenode.daemonPort;\n\n    // sockets => pending sockets (which is a wrapper)\n    this.pendingSockets = new Map();\n\n    // listen on new socket connection\n    this.litenode.on('socketconnect', this.socketConnectHandler);\n\n    // in case too many pending connections (such as DDoS),\n    // drop pending connections after roughly 20s' idle\n    this.timer = setInterval(() => {\n      let now = getCurTimestamp();\n      for (let [socket, pendingSocket] of this.pendingSockets) {\n        if (now - pendingSocket.timestamp > 20000) {\n          console.warn(`Handshake timeouts with ${getSocketAddress(socket)}.`);\n          socket.close(undefined, 'HANDSHAKE_TIMEOUTS');\n          this.pendingSockets.delete(socket);\n        }\n      }\n\n    }, 10000);\n  }\n\n  addPendingSocket(socket, incoming) {\n    try {\n      let pendingSocket = new PendingSocket(socket, incoming);\n      let proxiedSocket = this.litenode.createSocketProxy(socket, 'N/A');\n\n      socket._messageHandler = ((message) => {\n        try {\n          let { state } = pendingSocket\n          let { messageType, ...payload } = JSON.parse(message);\n          if (typeof messageType !== 'string' || !MSG_TYPES.includes(messageType)) {\n            throw new Error();\n          }\n\n          if (this.litenode.debug) {\n            // note that only logs valid procotol messages\n            this.litenode.messageLogs.push({\n              peer: 'N/A',\n              dir: 'inbound',\n              msg: { messageType, ...payload },\n              time: getCurTimestamp('s')\n            });\n          }\n          \n          // when receiving info message\n          if (messageType === infoType) {\n            messageValidators[infoType](payload);\n  \n            if (incoming && state === 'INIT') {\n              pendingSocket.state = 'INFO_SENT'\n              pendingSocket.uuid = payload.uuid;\n              pendingSocket.nodeType = payload.nodeType;\n              pendingSocket.daemonPort = payload.daemonPort;\n  \n              this.sendInfo(proxiedSocket);\n  \n            } else if (!incoming && state === 'INFO_SENT') {\n              pendingSocket.state = 'ESTABLISHED';\n              pendingSocket.uuid = payload.uuid;\n              pendingSocket.nodeType = payload.nodeType;\n              pendingSocket.daemonPort = payload.daemonPort;\n  \n              this.sendInfoAck(proxiedSocket);\n              this.onEstablished(pendingSocket);\n  \n            } else {\n              throw new Error();\n            }\n          }\n  \n          // when receiving info ack message\n          if (messageType === infoAckType) {\n            messageValidators[infoAckType](payload);\n  \n            if (incoming && state === 'INFO_SENT') {\n              pendingSocket.state = 'ESTABLISHED';\n  \n              this.onEstablished(pendingSocket);\n  \n            } else {\n              throw new Error();\n            }\n          }\n  \n        } catch (err) {\n          console.warn(`Handshake failed with ${getSocketAddress(socket)}, reason:\\n${err.stack}`);\n          // close the underlying socket\n          socket.close(undefined, 'HANDSHAKE_FAILED');\n        }\n\n      }).bind(this); // end of _messageHandler\n\n      socket.on(BUILD_TARGET === 'node' ? 'message' : 'data', socket._messageHandler);\n      socket.on('close', (code, reason) => {\n        this.pendingSockets.delete(socket);\n      });\n      this.pendingSockets.set(socket, pendingSocket);\n\n      if (!incoming) {\n        // sending the first info message\n        // to initiate the handshake process\n        this.sendInfo(proxiedSocket);\n        pendingSocket.state = 'INFO_SENT'\n      }\n\n    } catch (err) {\n      console.warn(`Handshake failed with ${getSocketAddress(socket)}, reason:\\n${err}`);\n      // close the underlying socket\n      socket.close(undefined, 'HANDSHAKE_FAILED');\n    }\n  }\n\n  socketConnectHandler(socket, incoming) {\n    this.addPendingSocket(socket, incoming);\n  }\n\n  // on handshake completing\n  onEstablished(pendingSocket) {\n    let { socket, incoming, uuid, nodeType, daemonPort } = pendingSocket;\n    let peer = new Peer(uuid, socket, incoming, daemonPort, nodeType);\n\n    socket.removeListener('message', socket._messageHandler);\n    delete socket._messageHandler\n    \n    this.pendingSockets.delete(socket);\n    this.litenode.addNewPeer(peer);\n  }\n\n  sendInfo(socket) {\n    socket.send(JSON.stringify(info({\n      uuid: this.uuid, \n      nodeType: this.nodeType,\n      daemonPort: this.daemonPort\n    })));\n  }\n\n  sendInfoAck(socket) {\n    socket.send( JSON.stringify(infoAck()) );\n  }\n\n  /**\n   * Do the cleanup.\n   */\n  close() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n}; // end of HandshakeManager\n\nmodule.exports = HandshakeManager;\n","const { getRemoteAddress, getSocketAddress } = require('./utils/network');\n\nclass Peer {\n  /**\n   * @param {string} uuid             peer's uuid\n   * @param {*} socket                network socket to the peer\n   * @param {boolean} incoming        whether the connection is incoming\n   * @param {string} daemonPort       peer's daemon port\n   * @param {string} nodeType         peer's node type\n   */\n  constructor(uuid, socket, incoming, daemonPort, nodeType) {\n    this.uuid = uuid;\n    this.socket = socket;\n    this.incoming = incoming;\n    this.daemonPort = daemonPort;\n    this.nodeType = nodeType;\n    this.url = `ws://${getRemoteAddress(socket)}:${daemonPort}`;\n  }\n\n  /**\n   * Note that error might be thrown, such as when trying to \n   * send data through closed connection (very rare though - the\n   * underlaying litenode will take care of that).\n   * \n   * @param {string} message to send\n   */\n  send(msg) {\n    this.socket.send(msg);\n  }\n\n  /**\n   * Note that error might be thrown, such as when trying to \n   * send data through closed connection (very rare though - the\n   * underlaying litenode will take care of that).\n   * \n   * @param {Object} jsonObj object to send\n   */\n  sendJson(jsonObj) {\n    this.send(JSON.stringify(jsonObj));\n  }\n\n  toString() {\n    return `${this.nodeType} - ${this.url}`;\n  }\n\n  toJSON() {\n    return {\n      uuid: this.uuid,\n      remoteAddr: getSocketAddress(this.socket),\n      daemonPort: this.daemonPort,\n      incoming: this.incoming,\n      type: this.nodeType\n    };\n  }\n}\n\nmodule.exports = Peer;\n","const EventEmitter = require('events');\n\n/**\n * A chunk is a fixed number of consecutive blocks (only block id) grouped\n * together stored in LevelDB in binary format (not in hex encode), mainly\n * for retrieval / flushing efficiency from or to disk.\n * \n * NOTE that once a block is stored in LevelDB, you should NEVER change this\n * constant down below. Otherwise, data will be corrupted.\n */\nconst chunkSize = 1024;\n\n/**\n * This is a very low level abstraction of a blockchain, which needs to be \n * injected with an store (using LevelDB / IndexedDB) interface implementation\n * for interacting with persistant storage medium. Take `LiteProtocol`'s\n * implementation as an example.\n * \n * This blockchain abstraction here is (should) be protocol-agnostic.\n * \n * One assumption using this blockchain abstraction here is that you MUST \n * always only persist valid blocks (it doesn't have to be in the main branch \n * in the long run, but it must be a valid block). And you append elder blocks \n * and then newer blocks to the blockchain, either one by one, or in a batch.\n * In other words, you MUST always append a block after all its predecessor blocks\n * have been persisted.\n * \n * NOTE that both chunk and height (length of blockchain) start at index 0.\n */\nclass Blockchain extends EventEmitter {\n  constructor(store) {\n    super();\n    this.store = store;\n    this.db = store.db;\n    this.genKey = store.constructor.genKey;\n    \n    // an array of block ids (in hex encoding)\n    this.blockchain = null;\n    this._ready = false;\n\n    this.init();\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  async init() {\n    try {\n      let height = await this.getCurHeight() + 1;\n      let numOfChunks = Math.floor(height / chunkSize);\n      let numOfBlocks = height % chunkSize;\n\n      let chunks = await Promise.all(\n        Array.from(Array(numOfChunks).keys()) // generate a number sequence\n          .map(num => this._getChunk(num))\n      );\n      // flatten chunks\n      chunks = [].concat.apply([], chunks);\n\n      let blocks = [];\n      let prevBlockId = null;\n      for (let i = 0; i < numOfBlocks; i++) {\n        let block = await (\n          i === 0 ? this.getHeadBlock() : this.getBlock(prevBlockId)\n        );\n\n        prevBlockId = block.prevBlock;\n        blocks.unshift(block.hash);\n      }\n\n      this.blockchain = [...chunks, ...blocks];\n      this._ready = true;\n      this.emit('ready');\n\n    } catch (err) {\n      this.emit('error', err);\n    }\n  }\n\n  /**\n   * Inside a chunk, the order is from elder blocks to newer blocks.\n   * Note that if you're trying to get a non-existent chunk, an error\n   * will be thrown.\n   */\n  async _getChunk(serialNum) {\n    let buf = await this.db.get(this.genKey(`chunk_${serialNum}`));\n    let chunk = [];\n\n    // just be cautious\n    if (buf.length !== chunkSize * 32) { process.exit(1); }\n\n    for (let i = 0; i < buf.length; i += 32) {\n      chunk.push(buf.slice(i, i + 32).toString('hex'));\n    }\n    return chunk;\n  }\n\n  /**\n   * Append next block on top of current head block on the blockchain.\n   */\n  async append(block) {\n    const ops = [];\n    this.blockchain.push(block.hash);\n    let height = this.getCurHeightSync();\n\n    if ((height + 1) % chunkSize === 0) {\n      const serialNum = Math.floor((height + 1) / chunkSize) - 1;\n      const buf = Buffer.from(this.blockchain.slice(height + 1 - chunkSize).join(''), 'hex');\n      ops.push({ type: 'put', key: this.genKey(`chunk_${serialNum}`), value: buf });\n    }\n\n    return this.store.appendBlock(block, ops);\n  }\n\n  /**\n   * Append a branch on a specific location on the blockchain, and the \n   * new branch will be the main blockchain branch.\n   * \n   * TODO update chunk index\n   */\n  async appendAt(blocks) {\n    // some cautious checks\n    if (!blocks.length) { return; }\n    if (blocks[blocks.length - 1].height <= this.getCurHeightSync()) {\n      throw new Error('Trying to append a invalid subchain, abort.');\n    }\n\n    let at = blocks[0].height;\n    let blockIds = blocks.map(block => block.hash);\n    let offBlockIds = this.blockchain.splice(at, Number.MAX_SAFE_INTEGER, ...blockIds);\n\n    let chunkAt = Math.floor(at / chunkSize);\n    let ops = [];\n\n    for (let i = chunkAt * chunkSize; i + chunkSize < this.blockchain.length; i += chunkSize) {\n      let buf = Buffer.from(this.blockchain.slice(i, i + chunkSize).join(''), 'hex');\n      ops.push({ type: 'put', key: this.genKey(`chunk_${i / chunkSize}`), value: buf });\n    }\n\n    // append the new branch\n    await this.store.appendBlocksAt(blocks, ops);\n\n    // following removes stale litemessage indices\n    let offBlocks = await Promise.all(\n      offBlockIds.map(id => this.getBlock(id))\n    );\n    let offLitemsgs = [];\n\n    for (let block of offBlocks) {\n      if (block.litemsgs) {\n        offLitemsgs.push(...block.litemsgs);\n      }\n    }\n    await Promise.all(\n      offLitemsgs.map(async ({ hash }) => {\n        let blockId = await this.store.readLitemsg(hash);\n\n        if (!this.onMainBranchSync(blockId)) {\n          return this.store.removeLitemsg(hash);\n        }\n      })\n    );\n    // resolve nothing when success\n    // reject with error when error\n  }\n\n  /**\n   * Return the head block, or `undefined` when there's no\n   * block on the blockchain.\n   */\n  async getHeadBlock() {\n    let blockId = await this.store.readHeadBlock();\n    return this.getBlock(blockId);\n  }\n\n  /**\n   * Synchronously get current head block's id. If there is no block\n   * yet, `undefined` will be returned.\n   */\n  getHeadBlockIdSync() {\n    let length = this.blockchain.length;\n    return length ? this.blockchain[length - 1] : undefined;\n  }\n\n  getBlockIdAtSync(height) {\n    let curHeight = this.getCurHeightSync();\n    if (height < 0 || height > curHeight) {\n      throw new Error('Invalid height given.');\n    }\n\n    return this.blockchain[height];\n  }\n\n  /**\n   * Note that height is 0-based (first block's height is 0).\n   * If there's no block yet, `-1` will returned.\n   */\n  async getCurHeight() {\n    let block = await this.getHeadBlock();\n    return block ? block.height : -1;\n  }\n\n  /**\n   * Note that height is 0-based (first block's height is 0).\n   * If there's no block yet, `-1` will returned.\n   */\n  getCurHeightSync() {\n    return this.blockchain.length - 1;\n  }\n\n  /**\n   * Get a list of block locator hashes, which is used in the\n   * `getBlocks` message that typically exists in blockchain\n   * protocol.\n   */\n  getLocatorsSync() {\n    let locators = [];\n    let height = this.getCurHeightSync();\n    let pow = 0;\n\n    if (height === -1) { return []; }\n\n    while (true) {\n      let i = Math.max(height + 1 - Math.pow(2, pow), 0);\n      locators.push(this.getBlockIdAtSync(i));\n      if (i === 0) { break; }\n      pow += 1;\n    }\n    return locators;\n  }\n\n  /**\n   * Get forked branch based on locators (an array of block hashes) peer provides.\n   * Return an array of block ids (from elder blocks to latest ones).\n   */\n  getForkedBranchSync(locators) {\n    if (this.blockchain.length < locators.length) {\n      return [];\n    }\n\n    let height = this.getCurHeightSync();\n    if (height === -1) { return []; }\n    let i = height;\n\n    for (; i >= 0; i--) {\n      let blockId = this.blockchain[i];\n      if (locators.includes(blockId)) {\n        break;\n      }\n    }\n\n    if (i === height) { return []; }\n    return this.blockchain.slice(i + 1);\n  }\n\n  /**\n   * @param {*} height note that height is 0-based index\n   */\n  async getBlockAt(height) {\n    // just to be cautious\n    if (height >= this.blockchain.length) {\n      throw new Error('Invalid block height.');\n    }\n\n    let blockId = this.blockchain[height];\n    return this.getBlock(blockId);\n  }\n\n  /**\n   * Get all blocks on the blockchain main branch.\n   * At this point there is no pagination yet, so this\n   * operation is very expensive.\n   */\n  async getBlocks(reverse = true) {\n    let blocks = await Promise.all(\n      this.blockchain.map(this.getBlock, this)\n    );\n    if (reverse) { blocks.reverse(); }\n    return blocks;\n  }\n\n  /**\n   * Return the whole block specified by the given block id.\n   * If block doesn't exist, `undefined` will be returned.\n   */\n  async getBlock(blockId) {\n    return this.store.readBlock(blockId);\n  }\n\n  /**\n   * If the given block is not on the main blockchain, the confirmation\n   * count will always be 0.\n   */\n  getConfirmationCntSync(blockId) {\n    if (!this.onMainBranchSync(blockId)) { return null; }\n\n    return this.getCurHeightSync() - this.blockchain.indexOf(blockId);\n  }\n\n  /**\n   * Determine whether the given block is on the main blockchain branch.\n   * The difference from the func `hasBlock` is that this is a synchronous\n   * operation.\n   */\n  onMainBranchSync(blockId) {\n    return this.blockchain.includes(blockId);\n  }\n\n  /**\n   * By default, return true only if the given block is on the main blockchain\n   * branch. If you want it to return true even if the block is off main branch,\n   * set the `onMainBranch` to false.\n   */\n  async hasBlock(blockId, onMainBranch = true) {\n    if (onMainBranch) {\n      return this.blockchain.includes(blockId);\n    }\n\n    return await this.getBlock(blockId) !== undefined;\n  }\n}\n\nmodule.exports = Blockchain;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","module.exports = require(\"events\");","module.exports = require(\"js-sha256\");","module.exports = require(\"buffer/\");"],"sourceRoot":""}